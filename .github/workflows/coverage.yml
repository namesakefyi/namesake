name: Coverage

on: 
  pull_request:
    branches: main
    paths:
      - "convex/**"
      - "e2e/**"
      - "src/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch:
          - ${{ github.head_ref }}
          - main

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Test coverage
        run: npx vitest --coverage.enabled true

      - name: Prepare a unique name for Artifacts
        id: prep_artifact_name
        run: |
          # Calculate a unique string which applies to the matrix entry
          # that we can use to construct unique and valid artifact names.
          # We achieve that by squashing runs of characters are invalid
          # in artifact names, and also whitespace and dashes, into a
          # single dash character.  The unique string will appear as
          # the environment variable ARTIFACT_NAME in subsequent actions.
          name="${{ matrix.branch }}"

          # The option to enable + in sed regexps differs by OS so we avoid it
          name=$(echo -n "$name" | sed -e 's/[ \t:\/\\"<>|*?]/-/g' -e 's/--*/-/g')
          echo "ARTIFACT_NAME=$name" >> $GITHUB_ENV

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ env.ARTIFACT_NAME }}
          path: coverage
          overwrite: true

  report-coverage:
    needs: test-coverage
    name: Report Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
  
      - name: Download coverage (${{ env.ARTIFACT_NAME }})
        uses: actions/download-artifact@v4
        with:
          name: coverage-${{ env.ARTIFACT_NAME }}
          path: coverage

      - name: Download coverage (main)
        uses: actions/download-artifact@v4
        with:
          name: coverage-main
          path: coverage-main

      - name: Report coverage
        if: always()
        uses: davelosert/vitest-coverage-report-action@v2.8.0
        with:
          json-summary-compare-path: coverage-main/coverage-summary.json
