/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnauthenticatedImport } from './routes/_unauthenticated'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as UnauthenticatedLoginImport } from './routes/_unauthenticated/login'
import { Route as AuthenticatedQuestsRouteImport } from './routes/_authenticated/quests/route'
import { Route as AuthenticatedAdminRouteImport } from './routes/_authenticated/admin/route'
import { Route as AuthenticatedSettingsIndexImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedAdminIndexImport } from './routes/_authenticated/admin/index'
import { Route as AuthenticatedQuestsQuestIdImport } from './routes/_authenticated/quests/$questId'
import { Route as AuthenticatedAdminQuestsIndexImport } from './routes/_authenticated/admin/quests/index'
import { Route as AuthenticatedAdminFormsIndexImport } from './routes/_authenticated/admin/forms/index'
import { Route as AuthenticatedAdminQuestsQuestIdImport } from './routes/_authenticated/admin/quests/$questId'
import { Route as AuthenticatedAdminFormsFormIdImport } from './routes/_authenticated/admin/forms/$formId'

// Create/Update Routes

const UnauthenticatedRoute = UnauthenticatedImport.update({
  id: '/_unauthenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const UnauthenticatedLoginRoute = UnauthenticatedLoginImport.update({
  path: '/login',
  getParentRoute: () => UnauthenticatedRoute,
} as any)

const AuthenticatedQuestsRouteRoute = AuthenticatedQuestsRouteImport.update({
  path: '/quests',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAdminRouteRoute = AuthenticatedAdminRouteImport.update({
  path: '/admin',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSettingsIndexRoute = AuthenticatedSettingsIndexImport.update(
  {
    path: '/settings/',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedAdminIndexRoute = AuthenticatedAdminIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedAdminRouteRoute,
} as any)

const AuthenticatedQuestsQuestIdRoute = AuthenticatedQuestsQuestIdImport.update(
  {
    path: '/$questId',
    getParentRoute: () => AuthenticatedQuestsRouteRoute,
  } as any,
)

const AuthenticatedAdminQuestsIndexRoute =
  AuthenticatedAdminQuestsIndexImport.update({
    path: '/quests/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

const AuthenticatedAdminFormsIndexRoute =
  AuthenticatedAdminFormsIndexImport.update({
    path: '/forms/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

const AuthenticatedAdminQuestsQuestIdRoute =
  AuthenticatedAdminQuestsQuestIdImport.update({
    path: '/quests/$questId',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

const AuthenticatedAdminFormsFormIdRoute =
  AuthenticatedAdminFormsFormIdImport.update({
    path: '/forms/$formId',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticated': {
      id: '/_unauthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/admin': {
      id: '/_authenticated/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminRouteImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/quests': {
      id: '/_authenticated/quests'
      path: '/quests'
      fullPath: '/quests'
      preLoaderRoute: typeof AuthenticatedQuestsRouteImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_unauthenticated/login': {
      id: '/_unauthenticated/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnauthenticatedLoginImport
      parentRoute: typeof UnauthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/quests/$questId': {
      id: '/_authenticated/quests/$questId'
      path: '/$questId'
      fullPath: '/quests/$questId'
      preLoaderRoute: typeof AuthenticatedQuestsQuestIdImport
      parentRoute: typeof AuthenticatedQuestsRouteImport
    }
    '/_authenticated/admin/': {
      id: '/_authenticated/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AuthenticatedAdminIndexImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/forms/$formId': {
      id: '/_authenticated/admin/forms/$formId'
      path: '/forms/$formId'
      fullPath: '/admin/forms/$formId'
      preLoaderRoute: typeof AuthenticatedAdminFormsFormIdImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/quests/$questId': {
      id: '/_authenticated/admin/quests/$questId'
      path: '/quests/$questId'
      fullPath: '/admin/quests/$questId'
      preLoaderRoute: typeof AuthenticatedAdminQuestsQuestIdImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/forms/': {
      id: '/_authenticated/admin/forms/'
      path: '/forms'
      fullPath: '/admin/forms'
      preLoaderRoute: typeof AuthenticatedAdminFormsIndexImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/admin/quests/': {
      id: '/_authenticated/admin/quests/'
      path: '/quests'
      fullPath: '/admin/quests'
      preLoaderRoute: typeof AuthenticatedAdminQuestsIndexImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedAdminRouteRouteChildren {
  AuthenticatedAdminIndexRoute: typeof AuthenticatedAdminIndexRoute
  AuthenticatedAdminFormsFormIdRoute: typeof AuthenticatedAdminFormsFormIdRoute
  AuthenticatedAdminQuestsQuestIdRoute: typeof AuthenticatedAdminQuestsQuestIdRoute
  AuthenticatedAdminFormsIndexRoute: typeof AuthenticatedAdminFormsIndexRoute
  AuthenticatedAdminQuestsIndexRoute: typeof AuthenticatedAdminQuestsIndexRoute
}

const AuthenticatedAdminRouteRouteChildren: AuthenticatedAdminRouteRouteChildren =
  {
    AuthenticatedAdminIndexRoute: AuthenticatedAdminIndexRoute,
    AuthenticatedAdminFormsFormIdRoute: AuthenticatedAdminFormsFormIdRoute,
    AuthenticatedAdminQuestsQuestIdRoute: AuthenticatedAdminQuestsQuestIdRoute,
    AuthenticatedAdminFormsIndexRoute: AuthenticatedAdminFormsIndexRoute,
    AuthenticatedAdminQuestsIndexRoute: AuthenticatedAdminQuestsIndexRoute,
  }

const AuthenticatedAdminRouteRouteWithChildren =
  AuthenticatedAdminRouteRoute._addFileChildren(
    AuthenticatedAdminRouteRouteChildren,
  )

interface AuthenticatedQuestsRouteRouteChildren {
  AuthenticatedQuestsQuestIdRoute: typeof AuthenticatedQuestsQuestIdRoute
}

const AuthenticatedQuestsRouteRouteChildren: AuthenticatedQuestsRouteRouteChildren =
  {
    AuthenticatedQuestsQuestIdRoute: AuthenticatedQuestsQuestIdRoute,
  }

const AuthenticatedQuestsRouteRouteWithChildren =
  AuthenticatedQuestsRouteRoute._addFileChildren(
    AuthenticatedQuestsRouteRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedAdminRouteRoute: typeof AuthenticatedAdminRouteRouteWithChildren
  AuthenticatedQuestsRouteRoute: typeof AuthenticatedQuestsRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAdminRouteRoute: AuthenticatedAdminRouteRouteWithChildren,
  AuthenticatedQuestsRouteRoute: AuthenticatedQuestsRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface UnauthenticatedRouteChildren {
  UnauthenticatedLoginRoute: typeof UnauthenticatedLoginRoute
}

const UnauthenticatedRouteChildren: UnauthenticatedRouteChildren = {
  UnauthenticatedLoginRoute: UnauthenticatedLoginRoute,
}

const UnauthenticatedRouteWithChildren = UnauthenticatedRoute._addFileChildren(
  UnauthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof UnauthenticatedRouteWithChildren
  '/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/quests': typeof AuthenticatedQuestsRouteRouteWithChildren
  '/login': typeof UnauthenticatedLoginRoute
  '/': typeof AuthenticatedIndexRoute
  '/quests/$questId': typeof AuthenticatedQuestsQuestIdRoute
  '/admin/': typeof AuthenticatedAdminIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/admin/forms/$formId': typeof AuthenticatedAdminFormsFormIdRoute
  '/admin/quests/$questId': typeof AuthenticatedAdminQuestsQuestIdRoute
  '/admin/forms': typeof AuthenticatedAdminFormsIndexRoute
  '/admin/quests': typeof AuthenticatedAdminQuestsIndexRoute
}

export interface FileRoutesByTo {
  '': typeof UnauthenticatedRouteWithChildren
  '/quests': typeof AuthenticatedQuestsRouteRouteWithChildren
  '/login': typeof UnauthenticatedLoginRoute
  '/': typeof AuthenticatedIndexRoute
  '/quests/$questId': typeof AuthenticatedQuestsQuestIdRoute
  '/admin': typeof AuthenticatedAdminIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/admin/forms/$formId': typeof AuthenticatedAdminFormsFormIdRoute
  '/admin/quests/$questId': typeof AuthenticatedAdminQuestsQuestIdRoute
  '/admin/forms': typeof AuthenticatedAdminFormsIndexRoute
  '/admin/quests': typeof AuthenticatedAdminQuestsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_unauthenticated': typeof UnauthenticatedRouteWithChildren
  '/_authenticated/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/_authenticated/quests': typeof AuthenticatedQuestsRouteRouteWithChildren
  '/_unauthenticated/login': typeof UnauthenticatedLoginRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/quests/$questId': typeof AuthenticatedQuestsQuestIdRoute
  '/_authenticated/admin/': typeof AuthenticatedAdminIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/admin/forms/$formId': typeof AuthenticatedAdminFormsFormIdRoute
  '/_authenticated/admin/quests/$questId': typeof AuthenticatedAdminQuestsQuestIdRoute
  '/_authenticated/admin/forms/': typeof AuthenticatedAdminFormsIndexRoute
  '/_authenticated/admin/quests/': typeof AuthenticatedAdminQuestsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/admin'
    | '/quests'
    | '/login'
    | '/'
    | '/quests/$questId'
    | '/admin/'
    | '/settings'
    | '/admin/forms/$formId'
    | '/admin/quests/$questId'
    | '/admin/forms'
    | '/admin/quests'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/quests'
    | '/login'
    | '/'
    | '/quests/$questId'
    | '/admin'
    | '/settings'
    | '/admin/forms/$formId'
    | '/admin/quests/$questId'
    | '/admin/forms'
    | '/admin/quests'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_unauthenticated'
    | '/_authenticated/admin'
    | '/_authenticated/quests'
    | '/_unauthenticated/login'
    | '/_authenticated/'
    | '/_authenticated/quests/$questId'
    | '/_authenticated/admin/'
    | '/_authenticated/settings/'
    | '/_authenticated/admin/forms/$formId'
    | '/_authenticated/admin/quests/$questId'
    | '/_authenticated/admin/forms/'
    | '/_authenticated/admin/quests/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  UnauthenticatedRoute: typeof UnauthenticatedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  UnauthenticatedRoute: UnauthenticatedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_unauthenticated"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/admin",
        "/_authenticated/quests",
        "/_authenticated/",
        "/_authenticated/settings/"
      ]
    },
    "/_unauthenticated": {
      "filePath": "_unauthenticated.tsx",
      "children": [
        "/_unauthenticated/login"
      ]
    },
    "/_authenticated/admin": {
      "filePath": "_authenticated/admin/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/admin/",
        "/_authenticated/admin/forms/$formId",
        "/_authenticated/admin/quests/$questId",
        "/_authenticated/admin/forms/",
        "/_authenticated/admin/quests/"
      ]
    },
    "/_authenticated/quests": {
      "filePath": "_authenticated/quests/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/quests/$questId"
      ]
    },
    "/_unauthenticated/login": {
      "filePath": "_unauthenticated/login.tsx",
      "parent": "/_unauthenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/quests/$questId": {
      "filePath": "_authenticated/quests/$questId.tsx",
      "parent": "/_authenticated/quests"
    },
    "/_authenticated/admin/": {
      "filePath": "_authenticated/admin/index.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/forms/$formId": {
      "filePath": "_authenticated/admin/forms/$formId.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/quests/$questId": {
      "filePath": "_authenticated/admin/quests/$questId.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/forms/": {
      "filePath": "_authenticated/admin/forms/index.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/quests/": {
      "filePath": "_authenticated/admin/quests/index.tsx",
      "parent": "/_authenticated/admin"
    }
  }
}
ROUTE_MANIFEST_END */
