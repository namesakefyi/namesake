/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SigninImport } from './routes/signin'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as IndexImport } from './routes/index'
import { Route as SettingsIndexImport } from './routes/settings/index'
import { Route as QuestsIndexImport } from './routes/quests/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AdminQuestsIndexImport } from './routes/admin/quests/index'
import { Route as AdminFormsIndexImport } from './routes/admin/forms/index'
import { Route as AdminQuestsQuestIdImport } from './routes/admin/quests/$questId'
import { Route as AdminFormsFormIdImport } from './routes/admin/forms/$formId'

// Create/Update Routes

const SigninRoute = SigninImport.update({
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsIndexRoute = SettingsIndexImport.update({
  path: '/settings/',
  getParentRoute: () => rootRoute,
} as any)

const QuestsIndexRoute = QuestsIndexImport.update({
  path: '/quests/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminQuestsIndexRoute = AdminQuestsIndexImport.update({
  path: '/quests/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminFormsIndexRoute = AdminFormsIndexImport.update({
  path: '/forms/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminQuestsQuestIdRoute = AdminQuestsQuestIdImport.update({
  path: '/quests/$questId',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminFormsFormIdRoute = AdminFormsFormIdImport.update({
  path: '/forms/$formId',
  getParentRoute: () => AdminRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/quests/': {
      id: '/quests/'
      path: '/quests'
      fullPath: '/quests'
      preLoaderRoute: typeof QuestsIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/forms/$formId': {
      id: '/admin/forms/$formId'
      path: '/forms/$formId'
      fullPath: '/admin/forms/$formId'
      preLoaderRoute: typeof AdminFormsFormIdImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/quests/$questId': {
      id: '/admin/quests/$questId'
      path: '/quests/$questId'
      fullPath: '/admin/quests/$questId'
      preLoaderRoute: typeof AdminQuestsQuestIdImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/forms/': {
      id: '/admin/forms/'
      path: '/forms'
      fullPath: '/admin/forms'
      preLoaderRoute: typeof AdminFormsIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/quests/': {
      id: '/admin/quests/'
      path: '/quests'
      fullPath: '/admin/quests'
      preLoaderRoute: typeof AdminQuestsIndexImport
      parentRoute: typeof AdminRouteImport
    }
  }
}

// Create and export the route tree

interface AdminRouteRouteChildren {
  AdminIndexRoute: typeof AdminIndexRoute
  AdminFormsFormIdRoute: typeof AdminFormsFormIdRoute
  AdminQuestsQuestIdRoute: typeof AdminQuestsQuestIdRoute
  AdminFormsIndexRoute: typeof AdminFormsIndexRoute
  AdminQuestsIndexRoute: typeof AdminQuestsIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminIndexRoute: AdminIndexRoute,
  AdminFormsFormIdRoute: AdminFormsFormIdRoute,
  AdminQuestsQuestIdRoute: AdminQuestsQuestIdRoute,
  AdminFormsIndexRoute: AdminFormsIndexRoute,
  AdminQuestsIndexRoute: AdminQuestsIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/signin': typeof SigninRoute
  '/admin/': typeof AdminIndexRoute
  '/quests': typeof QuestsIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/admin/forms/$formId': typeof AdminFormsFormIdRoute
  '/admin/quests/$questId': typeof AdminQuestsQuestIdRoute
  '/admin/forms': typeof AdminFormsIndexRoute
  '/admin/quests': typeof AdminQuestsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/admin': typeof AdminIndexRoute
  '/quests': typeof QuestsIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/admin/forms/$formId': typeof AdminFormsFormIdRoute
  '/admin/quests/$questId': typeof AdminQuestsQuestIdRoute
  '/admin/forms': typeof AdminFormsIndexRoute
  '/admin/quests': typeof AdminQuestsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/signin': typeof SigninRoute
  '/admin/': typeof AdminIndexRoute
  '/quests/': typeof QuestsIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/admin/forms/$formId': typeof AdminFormsFormIdRoute
  '/admin/quests/$questId': typeof AdminQuestsQuestIdRoute
  '/admin/forms/': typeof AdminFormsIndexRoute
  '/admin/quests/': typeof AdminQuestsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/signin'
    | '/admin/'
    | '/quests'
    | '/settings'
    | '/admin/forms/$formId'
    | '/admin/quests/$questId'
    | '/admin/forms'
    | '/admin/quests'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signin'
    | '/admin'
    | '/quests'
    | '/settings'
    | '/admin/forms/$formId'
    | '/admin/quests/$questId'
    | '/admin/forms'
    | '/admin/quests'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/signin'
    | '/admin/'
    | '/quests/'
    | '/settings/'
    | '/admin/forms/$formId'
    | '/admin/quests/$questId'
    | '/admin/forms/'
    | '/admin/quests/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  SigninRoute: typeof SigninRoute
  QuestsIndexRoute: typeof QuestsIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  SigninRoute: SigninRoute,
  QuestsIndexRoute: QuestsIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/signin",
        "/quests/",
        "/settings/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin/route.tsx",
      "children": [
        "/admin/",
        "/admin/forms/$formId",
        "/admin/quests/$questId",
        "/admin/forms/",
        "/admin/quests/"
      ]
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    },
    "/quests/": {
      "filePath": "quests/index.tsx"
    },
    "/settings/": {
      "filePath": "settings/index.tsx"
    },
    "/admin/forms/$formId": {
      "filePath": "admin/forms/$formId.tsx",
      "parent": "/admin"
    },
    "/admin/quests/$questId": {
      "filePath": "admin/quests/$questId.tsx",
      "parent": "/admin"
    },
    "/admin/forms/": {
      "filePath": "admin/forms/index.tsx",
      "parent": "/admin"
    },
    "/admin/quests/": {
      "filePath": "admin/quests/index.tsx",
      "parent": "/admin"
    }
  }
}
ROUTE_MANIFEST_END */
